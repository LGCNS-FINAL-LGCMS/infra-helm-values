prometheus:
  service:
    type: NodePort
    nodePort: 30002
  prometheusSpec:
    replicas: 1
    retention: 7d
    scrapeInterval: 30s
    evaluationInterval: 30s
    additionalScrapeConfigs:
      - job_name: istio-mesh
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - istio-system
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: istio-proxy;http-monitoring

    # 프로메테우스 스토리지 설정
#    storageSpec:
#      volumeClaimTemplate:
#        spec:
#          storageClassName: gp2
#          resources:
#            requests:
#              storage: 20Gi

    resources:
      requests:
        memory: 512Mi
        cpu: 100m
      limits:
        memory: 2Gi
        cpu: 1000m

    serviceMonitorSelectorNilUsesHelmValues: false
    serviceMonitorNamespaceSelector: {}
    serviceMonitorSelector: {}
    podMonitorSelectorNilUsesHelmValues: false
    podMonitorSelector: {}

#      matchLabels:
#        release: "prometheus"

grafana:
  enabled: true
  service:
    type: NodePort
    nodePort: 30001

  resources:
    requests:
      memory: 128Mi
      cpu: 100m
    limits:
      memory: 512Mi
      cpu: 500m

  # 그라파나 스토리지 설정
#  persistence:
#    enabled: true
#    type: pvc
#    storageClassName: gp2
#    size: 10Gi

  adminUser: "lgcms"
  adminPassword: "lgcms-passworld"

  # Loki, Tempo 데이터소스 설정
  additionalDataSources:
    - name: Loki
      type: loki
      url: http://loki:3100
      jsonData:
        maxLines: 1000

    - name: Tempo
      type: tempo
      url: http://tempo:3200
      jsonData:
        tracesToLogs:
          datasourceUid: "loki"

    - name: OpenTelemetry
      type: prometheus
      url: http://otel-collector:8889

    # Istio Control Plane 메트릭
#    - job_name: 'istio-policy'
#      kubernetes_sd_configs:
#        - role: endpoints
#          namespaces:
#            names:
#              - istio-system
#      relabel_configs:
#        - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
#          action: keep
#          regex: istio-policy;http-policy-monitoring


  # 대시보드 자동 임포트 비활성화
  sidecar:
    dashboards:
      enabled: true
      searchNamespace: ALL
      folderAnnotation: grafana_folder
      provider:
        foldersFromFilesStructure: true
    datasources:
      enabled: true
      searchNamespace: ALL

  imageRenderer:
    enabled: false

# Alertmanager 비활성화
alertmanager:
  enabled: false

# Node Exporter 설정
prometheus-node-exporter:
  enabled: true
  hostRootfs: false
  resources:
    requests:
      memory: 30Mi
      cpu: 100m
    limits:
      memory: 50Mi
      cpu: 200m

# Kube State Metrics 설정
kube-state-metrics:
  enabled: true
  resources:
    requests:
      memory: 32Mi
      cpu: 100m
    limits:
      memory: 64Mi
      cpu: 200m

kubeControllerManager:
  enabled: false
kubeEtcd:
  enabled: false
kubeScheduler:
  enabled: false
kubeProxy:
  enabled: false

# 기본 알림 룰 비활성화
defaultRules:
  create: false